section .text
global _start

%macro pushn 1-*
    ; Сохраняем регистры на стек
    pusha                 ; Сохраняем все регистры общего назначения
    %rep %0
        push %1         ; Пушим каждый из аргументов (регистры)
        %rotate 1
    %endrep
%endmacro

%macro popn 1-*
    ; Восстанавливаем регистры из стека
    %rep %0
        pop %1          ; Попим каждый из аргументов (регистры)
        %rotate 1
    %endrep
    popa                  ; Восстанавливаем все регистры общего назначения
%endmacro

section .data
    message db 'Hello, World!', 0

_start:
    ; Пример использования макроса pushn для сохранения регистров
    pushn rax, rbx, rcx  ; Сохраняем rax, rbx и rcx в стек

    ; Временно изменяем значения регистров
    mov rax, 10
    mov rbx, 20
    mov rcx, 30

    ; Используем потестировать значения регистров
    ; Делаем что-то полезное с измененными регистрами
    ; Например, складываем их
    add rax, rbx       ; rax = 10 + 20 = 30
    add rax, rcx       ; rax = 30 + 30 = 60

    ; Теперь восстановим предыдущие значения регистров
    popn rax, rbx, rcx  ; Восстанавливаем rax, rbx и rcx из стека

    ; Завершаем программу
    mov rax, 60        ; системный вызов для выхода
    xor rdi, rdi       ; код возврата 0
    syscall
